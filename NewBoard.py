import rules
def createBoard():
    rules.clearBoard()
    print(rules.pieceList,rules.pieceDict)
    if rules.numberOfDimensions == 6:
        blackStart4 = rules.size-1
        for each in range(rules.size):
            for x in range(0, rules.size):
                for z in range(0, rules.size):
                        rules.Pawn([x, 0, z, 1,each,0], 'white')
                        rules.Pawn([x, rules.size-1, z, rules.size-2,each,blackStart4], 'black')
                        rules.Pawn([x, 1, z, 1,each,0], 'white')
                        rules.Pawn([x, rules.size-2, z, rules.size-2,each,blackStart4], 'black')
            rules.Rook([0, 0, 3, 0,each,0], 'white') # create a white rook on each of the four corners for 4-d boards
            rules.Rook([3, 0, 3, 0,each,0], 'white')
            rules.Rook([3, blackStart4, 3, blackStart4,each,blackStart4], 'black') #create a black rook on each of the corners
            rules.Rook([0, blackStart4, 3, blackStart4,each,blackStart4], 'black')
            rules.Knight([0, 0, 2, 0,each,0], 'white')
            rules.Knight([3, 0, 2, 0,each,0], 'white')
            rules.Knight([0, blackStart4, 2, blackStart4,each,blackStart4], 'black')
            rules.Knight([3, blackStart4, 2, blackStart4,each,blackStart4], 'black')
            rules.ArchBishop([1, 0, 2, 0,each,0],'white')
            rules.ArchBishop([2, 0, 2, 0,each,0],'white')
            rules.ArchBishop([1, blackStart4, 2, blackStart4,each,blackStart4],'black')
            rules.ArchBishop([2,blackStart4,2,blackStart4,each,blackStart4],'black')
            rules.NightMare([1,0,3,0,each,0],'white')
            rules.NightMare([2,0,3,0,each,0],'white')
            rules.NightMare([1,blackStart4,3,blackStart4,each,blackStart4],'black')
            rules.NightMare([2,blackStart4,3,blackStart4,each,blackStart4],'black')
            rules.Bishop([3,0,1,0,each,0],'white')
            rules.Bishop([3,0,0,0,each,0],'white')
            rules.Bishop([3,blackStart4,1,blackStart4,each,blackStart4],'black')
            rules.Bishop([3,blackStart4,0,blackStart4,each,blackStart4],'black')
            rules.Knight([1,0,1,0,each,0],'white')
            rules.Knight([2,0,1,0,each,0],'white')
            rules.Knight([1,blackStart4,1,blackStart4,each,blackStart4],'black')
            rules.Knight([2,blackStart4,1,blackStart4,each,blackStart4],'black')
            rules.Pope([0,0,0,0,each,0],'white')
            rules.Pope([0,0,1,0,each,0],'white')
            rules.Pope([0,blackStart4,0,blackStart4,each,blackStart4],'black')
            rules.Pope([0,blackStart4,1,blackStart4,each,blackStart4],'black')
            rules.Queen([2, 0, 0, 0, each, 0], 'white')
            rules.Queen([2,blackStart4,0,blackStart4,each,blackStart4],'black')
            rules.King([1, 0, 0, 0, 0, 0], 'white')
            rules.King([1, blackStart4, 0, blackStart4, 0, blackStart4], 'black')
    elif rules.numberOfDimensions == 5:
        blackStart4 = rules.size-1
        for x in range(0, rules.size):
            for z in range(0, rules.size):
                    rules.Pawn([x, 0, z, 1,0], 'white')
                    rules.Pawn([x, rules.size-1, z, rules.size-2,0], 'black')
                    rules.Pawn([x, 1, z, 1,0], 'white')
                    rules.Pawn([x, rules.size-2, z, rules.size-2,0], 'black')
        rules.Rook([0, 0, 3, 0,0], 'white')
        rules.Rook([3, 0, 3, 0,0], 'white')
        rules.Rook([3, blackStart4, 3, blackStart4,0], 'black')
        rules.Rook([0, blackStart4, 3, blackStart4,0], 'black')
        rules.Knight([0, 0, 2, 0,0], 'white')
        rules.Knight([3, 0, 2, 0,0], 'white')
        rules.Knight([0, blackStart4, 2, blackStart4,0], 'black')
        rules.Knight([3, blackStart4, 2, blackStart4,0], 'black')
        rules.ArchBishop([1, 0, 2, 0,0],'white')
        rules.ArchBishop([2, 0, 2, 0,0],'white')
        rules.ArchBishop([1, blackStart4, 2, blackStart4,0],'black')
        rules.ArchBishop([2,blackStart4,2,blackStart4,0],'black')
        rules.NightMare([1,0,3,0,0],'white')
        rules.NightMare([2,0,3,0,0],'white')
        rules.NightMare([1,blackStart4,3,blackStart4,0],'black')
        rules.NightMare([2,blackStart4,3,blackStart4,0],'black')
        rules.Bishop([3,0,1,0,0],'white')
        rules.Bishop([3,0,0,0,0],'white')
        rules.Bishop([3,blackStart4,1,blackStart4,0],'black')
        rules.Bishop([3,blackStart4,0,blackStart4,0],'black')
        rules.Knight([1,0,1,0,0],'white')
        rules.Knight([2,0,1,0,0],'white')
        rules.Knight([1,blackStart4,1,blackStart4,0],'black')
        rules.Knight([2,blackStart4,1,blackStart4,0],'black')
        rules.Pope([0,0,0,0,0],'white')
        rules.Pope([0,0,1,0,0],'white')
        rules.Pope([0,blackStart4,0,blackStart4,0],'black')
        rules.Pope([0,blackStart4,1,blackStart4,0],'black')
        rules.Queen([2,blackStart4,0,blackStart4,0],'black')
        rules.King([1,0,0,0,0],'white')
        rules.King([1,blackStart4,0,blackStart4,0],'black')
        rules.Queen([2,0,0,0,0], 'white')
    else:
        blackStart4 = rules.size - 1
        for x in range(0, rules.size):
            for z in range(0, rules.size):
                rules.Pawn([x, 0, z, 1], 'white')
                rules.Pawn([x, rules.size - 1, z, rules.size - 2], 'black')
                rules.Pawn([x, 1, z, 1], 'white')
                rules.Pawn([x, rules.size - 2, z, rules.size - 2], 'black')
        rules.Rook([0, 0, 3, 0], 'white')
        rules.Rook([3, 0, 3, 0], 'white')
        rules.Rook([3, blackStart4, 3, blackStart4], 'black')
        rules.Rook([0, blackStart4, 3, blackStart4], 'black')
        rules.Knight([0, 0, 2, 0], 'white')
        rules.Knight([3, 0, 2, 0], 'white')
        rules.Knight([0, blackStart4, 2, blackStart4], 'black')
        rules.Knight([3, blackStart4, 2, blackStart4], 'black')
        rules.ArchBishop([1, 0, 2, 0], 'white')
        rules.ArchBishop([2, 0, 2, 0], 'white')
        rules.ArchBishop([1, blackStart4, 2, blackStart4], 'black')
        rules.ArchBishop([2, blackStart4, 2, blackStart4], 'black')
        rules.NightMare([1, 0, 3, 0], 'white')
        rules.NightMare([2, 0, 3, 0], 'white')
        rules.NightMare([1, blackStart4, 3, blackStart4], 'black')
        rules.NightMare([2, blackStart4, 3, blackStart4], 'black')
        rules.Bishop([3, 0, 1, 0], 'white')
        rules.Bishop([3, 0, 0, 0], 'white')
        rules.Bishop([3, blackStart4, 1, blackStart4], 'black')
        rules.Bishop([3, blackStart4, 0, blackStart4], 'black')
        rules.Knight([1, 0, 1, 0], 'white')
        rules.Knight([2, 0, 1, 0], 'white')
        rules.Knight([1, blackStart4, 1, blackStart4], 'black')
        rules.Knight([2, blackStart4, 1, blackStart4], 'black')
        rules.Pope([0, 0, 0, 0], 'white')
        rules.Pope([0, 0, 1, 0], 'white')
        rules.Pope([0, blackStart4, 0, blackStart4], 'black')
        rules.Pope([0, blackStart4, 1, blackStart4], 'black')
        rules.Queen([2, blackStart4, 0, blackStart4], 'black')
        rules.King([1, 0, 0, 0], 'white')
        rules.King([1, blackStart4, 0, blackStart4], 'black')
        rules.Queen([2, 0, 0, 0], 'white')
    print(rules.pieceList, rules.pieceDict)

